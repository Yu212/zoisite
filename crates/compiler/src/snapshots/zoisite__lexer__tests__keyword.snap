---
source: crates/compiler/src/lexer.rs
expression: "tokenize(\"let if else while break continue fun true false\")"
---
(
    [
        Token {
            kind: LetKw,
            text: "let",
            range: 0..3,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 3..4,
        },
        Token {
            kind: IfKw,
            text: "if",
            range: 4..6,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 6..7,
        },
        Token {
            kind: ElseKw,
            text: "else",
            range: 7..11,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 11..12,
        },
        Token {
            kind: WhileKw,
            text: "while",
            range: 12..17,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 17..18,
        },
        Token {
            kind: BreakKw,
            text: "break",
            range: 18..23,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 23..24,
        },
        Token {
            kind: ContinueKw,
            text: "continue",
            range: 24..32,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 32..33,
        },
        Token {
            kind: FunKw,
            text: "fun",
            range: 33..36,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 36..37,
        },
        Token {
            kind: TrueKw,
            text: "true",
            range: 37..41,
        },
        Token {
            kind: Whitespace,
            text: " ",
            range: 41..42,
        },
        Token {
            kind: FalseKw,
            text: "false",
            range: 42..47,
        },
        Token {
            kind: Eof,
            text: "",
            range: 47..47,
        },
    ],
    [],
)
